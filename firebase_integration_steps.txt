                                                                     

                                                                    Firebase Setup Guide

1) Create a Firebase Account

===> Go to Firebase and create an account.

===> After signing in, click on the [Go to Console] button in the navbar.

===> Click on Create a Project to start a new Firebase project.

===> Provide a name for your project and disable Google Analytics (optional).

===> Click Continue to create the project.

===> Once completed, you will be redirected to the project dashboard.

2) Overview of Firebase Services

===> Inside the Firebase project dashboard, you will find various services:

     ==> Authentication: Allows user authentication using Google, GitHub, email/password, etc.

     ==> Firestore Database: A NoSQL database that stores data in a document structure.

     ==> Realtime Database: Stores data in a tree structure and syncs in real time with the application.

     ==> Storage: Allows users to upload and store files such as images and videos.

     ==> Hosting: Provides free hosting for deploying applications.

3) Setting Up Firebase in a React App

  -> Step 1: Create a React Project

             --> Initialize a React project using Vite or Create React App.

             --> Navigate to the Project Overview in Firebase.

             --> Select Web App (<>) as the platform.

             --> Provide a nickname for your app and click Register this App.

  -> Step 2: Install Firebase

             --> Run the following command in your React project directory:

             --> npm install firebase

  -> Step 3: Configure Firebase in React

             --> Create a new file firebase.js in your React project.

             --> Copy and paste the Firebase configuration provided in Firebase.

             --> Initialize Firebase in firebase.js:

             -->  you will get somthing like this add to you firebase file

                 import { initializeApp } from "firebase/app";
                 import { getDatabase } from "firebase/database";

                 const firebaseConfig = {
                 apiKey: "YOUR_API_KEY",
                 authDomain: "YOUR_AUTH_DOMAIN",
                 databaseURL: "YOUR_DATABASE_URL",
                 projectId: "YOUR_PROJECT_ID",
                 storageBucket: "YOUR_STORAGE_BUCKET",
                 messagingSenderId: "YOUR_MESSAGING_SENDER_ID",
                 appId: "YOUR_APP_ID"
                 };

                 export const app = initializeApp(firebaseConfig);
                 export const db = getDatabase(app);

                 Click Continue to Console in Firebase to confirm that your app is connected.

4) Verify Firebase Connection with Realtime Database

         -> Go to Realtime Database in Firebase and click Create Database.

         -> Select your preferred database location and click Next.

         -> Choose Start in Test Mode (for development purposes) and click Enable.

         -> The database will be created with an initial null value.

         -> Writing Data to Realtime Database

         -> Import necessary Firebase functions into your React component:

           import { getDatabase, ref, set } from "firebase/database";
           import { app } from "./firebase";

           -> Create a function to add data:

              const db = getDatabase(app);

              const putData = () => {
              set(ref(db, 'users/aditi'), {
              id: '1',
              username: 'Aditi',
              age: 21
              });
              };

        -> Add a button in your React component to trigger this function:

           <button onClick={putData}>Put Data</button>

        -> Click the button and check Firebase Realtime Database to see if data is successfully written.

5) Enable Authentication in Firebase

        -> Go to Authentication in Firebase and click Get Started.

        -> Enable Email/Password authentication.

        -> Implementing Authentication in React

           Import Firebase authentication functions:

           import { getAuth } from "firebase/auth";
           import { app } from "./firebase";

           Create an instance of authentication:

           const auth = getAuth(app);

         -> Implement [sign-up] functionality (refer to Firebase docs for full implementation).

            ==> call the getAuth to get the instance of auth, and then call the function method (createUserWithEmailAndPassword) this method wil help to create
                the user account with email, and password, so we have to call the function with email, password and auth.
            ==> as this function return an promise so we will use .then, and console the value we got after we click on the function that making the signup method
            ==> after this we got email of ther user in the firebase.Authentication and also in console as we have provide the code to console the output value.
            ==> import { getAuth, createUserWithEmailAndPassword } from "firebase/auth";

                const auth = getAuth(app);

                const App = () => {
                const sigupUser = () => {
                createUserWithEmailAndPassword(
                auth,
                "aditigaikwad@gmail.com",
                "aditi@123"
                ).then((value) => console.log(value));
                };
                return (
                <div>
               <h1>React with firebase</h1>
               <button onClick={sigupUser}>Create Users</button>
               </div>
               );
               };
            ==> lets create an form to check more on details.

        -> [login] Functionality
            ==> to login the existing user we have an build-in method [signInWithEmailAndPassword] we will use this function method of login the user.
            ==> just add the method signInWithEmailAndPassword at call the function, firebase handle the error smoothly.

6) Correct way to use firebase in react, we will use context api.
  --> we have to make an context api .
